name: Mywebsite.js CI

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: build project
        run: npm run build

      - name: restart server
        run: |
          pm2 stop 0 || true
          pm2 start 0
          pm2 save
          sudo service nginx restart

      - name: Set Api Key env variable
        run: echo "SPOON_API_KEY=${{ secrets.SPOON_API_KEY }}" >> .env

  cypress-run:
    name: Cypress run
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Cache node modules
        id: npm-cyress-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.npm-cyress-cache.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run cy:run
